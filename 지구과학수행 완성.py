# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fVUbl37mgkPYYRxP_eNWLqMxdBzMsn5o
"""

import math            #각종 라이브러리들 불러오기
import numpy as np
import matplotlib.pyplot as plt
import folium
import pandas as pd
a = pd.read_csv("end.csv", engine='python', encoding='utf-8')     #CSV파일 판다스로 읽기
b= a.to_numpy()        #넘파이로 변환

G = 6.673*10**-11 #태양 상수
M = 5.9722*10**24 #지구 질량kg
R = 6371000 #지구 반지름meter
w = 7.29*10**-5 #지구 자전 각속도
m = float(input("우주선의 질량을 입력하시요 #space x 사의 falcon9은 549,054KG# :                     "))          #입력받기


#그래프 그리는거
x=np.linspace(-90,90,200)
Es = G*M*m/R -m/2*(R*np.cos(math.pi * (x/ 180))*w)**2      #내가 구한 에너지 보존을 이용한 공식
Ew = G*M*m/R +m/2*(R*np.cos(math.pi * (x/ 180))*w)**2      #내가 구한 에너지 보존을 이용한 공식


# 그래프 꾸미는거 
plt.figure(1)
plt.plot(x,Es/(10**10),x,Ew/(10**10), 'r')     #축 설정
plt.xlabel('latitude')         #X축 설정
plt.ylabel('energy for earth escape[TOE]')       #그래프 Y축 설명
plt.title('The energy to escape energy depend on latitude and direction[TOE]',fontsize='7')       #그래프 제목 설명
plt.legend(['same direction with rotation', 'opposite direction with rotation[TOE]'], loc=2, fontsize='7')       #그래프 여러개 쓸꺼여서 각각 설명

plt.figure(2)
plt.plot(x,(Ew-Es)/(10**10), 'r')      #축 설정
plt.xlabel('latitude')  #그래프 X축 설명
plt.ylabel('energy for earth escape[TOE] ')       #그래프 Y축 설명
plt.title('The amount of energy more need than shooting the rotating way[TOE]',fontsize='7')    #그래프 제목 설명

plt.show()       #그래프 보이기

##지도에 spaceport들 위치표시 및 에너지 표시
center = [37.541, 126.986]     #시작 위치
u=folium.Map(location=center, zoom_start=1)    #시작조건 설정
for i in range(13):
  folium.Marker([b[i,1],b[i,2]],popup= ("같은 방향으로 발사%s반대방향으로 발사%s차이%s"%
                                        (
                                            (G*M*m/R -m/2*(R*np.cos(math.pi * (float(b[i,2])/ 180))*w)**2)/(10**10),#내가 구한 에너지 보존을 이용한 공식
                                            (G*M*m/R +m/2*(R*np.cos(math.pi * (float(b[i,2])/ 180))*w)**2)/(10**10),#내가 구한 에너지 보존을 이용한 공식
                                            (m*(R*np.cos(math.pi * (float(b[i,2])/ 180))*w)**2)/(10**10)            #내가 구한 에너지 보존을 이용한 공식
                                        )
                                        
                                        ),tooltip=b[i,0],icon=folium.Icon(color='green',icon='cloud')).add_to(u)       #아이콘 표시하는거

u        #띄우기

